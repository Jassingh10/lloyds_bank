name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ------------------------
  # 1️⃣ Unit Tests (always run)
  # ------------------------
  unit-tests:
    name: Unit Tests (Offline)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: python -m pytest -m unit --cov=ingest_pipeline --cov-report=term-missing

  # ------------------------
  # 2️⃣ Integration Tests (only if secrets exist)
  # ------------------------
  integration-tests:
    name: Integration Tests (GCP)
    runs-on: ubuntu-latest
    needs: unit-tests  # only run if unit tests pass
    steps:
      - name: Check for GCP credentials
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "⚠️ No GCP_SA_KEY secret set. Skipping integration tests."
            exit 0
          fi

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure GCP Credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcp_key.json
          export GOOGLE_APPLICATION_CREDENTIALS="$HOME/gcp_key.json"
          gcloud auth activate-service-account --key-file=$HOME/gcp_key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Run Integration Tests
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ secrets.GCP_REGION }}
          RAW_BUCKET: ${{ secrets.GCP_RAW_BUCKET }}
          TEMP_BUCKET: ${{ secrets.GCP_TEMP_BUCKET }}
        run: python -m pytest -m integration